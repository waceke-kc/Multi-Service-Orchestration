
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
   
  grpc-service:
    # path to the Dockerfile for the gRPC service. Can even be a git repo
    container_name: grpc-service
    build: grpc/
    depends_on:
      - mongodb
    environment:
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DB: itemsdb

    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=:50051"]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "50051:50051"
      - "9103:9103"   # Expose the Prometheus metrics endpoint
    
  rest-service:
    container_name: rest-service
    build: rest/
    depends_on:
      - grpc-service
    ports:
      - "5000:5000"
     # - "9102:9102"   # Expose the REST service metrics endpoint
    environment:
      # The address at which REST calls gRPC servic
      GRPC_HOST: grpc-service
      GRPC_PORT: 50051

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./observability/grafana-provisioning:/etc/grafana/provisioning:ro
      - ./observability/grafana-data:/var/lib/grafana   # <-- Add this line